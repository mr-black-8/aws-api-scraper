{
  "service": "acm",
  "actions": [
    "AddTagsToCertificate",
    "DeleteCertificate",
    "DescribeCertificate",
    "GetCertificate",
    "ImportCertificate",
    "ListCertificates",
    "ListTagsForCertificate",
    "RemoveTagsFromCertificate",
    "RequestCertificate",
    "ResendValidationEmail"
  ]
}
{
  "service": "awscloudtrail",
  "actions": [
    "AddTags",
    "CreateTrail",
    "DeleteTrail",
    "DescribeTrails",
    "GetEventSelectors",
    "GetTrailStatus",
    "ListPublicKeys",
    "ListTags",
    "LookupEvents",
    "PutEventSelectors",
    "RemoveTags",
    "StartLogging",
    "StopLogging",
    "UpdateTrail"
  ]
}
{
  "service": "cognito-user-identity-pools",
  "actions": [
    "AddCustomAttributes",
    "AdminAddUserToGroup",
    "AdminConfirmSignUp",
    "AdminCreateUser",
    "AdminDeleteUser",
    "AdminDeleteUserAttributes",
    "AdminDisableUser",
    "AdminEnableUser",
    "AdminForgetDevice",
    "AdminGetDevice",
    "AdminGetUser",
    "AdminInitiateAuth",
    "AdminListDevices",
    "AdminListGroupsForUser",
    "AdminRemoveUserFromGroup",
    "AdminResetUserPassword",
    "AdminRespondToAuthChallenge",
    "AdminSetUserSettings",
    "AdminUpdateDeviceStatus",
    "AdminUpdateUserAttributes",
    "AdminUserGlobalSignOut",
    "ChangePassword",
    "ConfirmDevice",
    "ConfirmForgotPassword",
    "ConfirmSignUp",
    "CreateGroup",
    "CreateUserImportJob",
    "CreateUserPool",
    "CreateUserPoolClient",
    "DeleteGroup",
    "DeleteUser",
    "DeleteUserAttributes",
    "DeleteUserPool",
    "DeleteUserPoolClient",
    "DescribeUserImportJob",
    "DescribeUserPool",
    "DescribeUserPoolClient",
    "ForgetDevice",
    "ForgotPassword",
    "GetCSVHeader",
    "GetDevice",
    "GetGroup",
    "GetUser",
    "GetUserAttributeVerificationCode",
    "GlobalSignOut",
    "InitiateAuth",
    "ListDevices",
    "ListGroups",
    "ListUserImportJobs",
    "ListUserPoolClients",
    "ListUserPools",
    "ListUsers",
    "ListUsersInGroup",
    "ResendConfirmationCode",
    "RespondToAuthChallenge",
    "SetUserSettings",
    "SignUp",
    "StartUserImportJob",
    "StopUserImportJob",
    "UpdateDeviceStatus",
    "UpdateGroup",
    "UpdateUserAttributes",
    "UpdateUserPool",
    "UpdateUserPoolClient",
    "VerifyUserAttribute"
  ]
}
{
  "service": "cognitosync",
  "actions": [
    "BulkPublish",
    "DeleteDataset",
    "DescribeDataset",
    "DescribeIdentityPoolUsage",
    "DescribeIdentityUsage",
    "GetBulkPublishDetails",
    "GetCognitoEvents",
    "GetIdentityPoolConfiguration",
    "ListDatasets",
    "ListIdentityPoolUsage",
    "ListRecords",
    "RegisterDevice",
    "SetCognitoEvents",
    "SetIdentityPoolConfiguration",
    "SubscribeToDataset",
    "UnsubscribeFromDataset",
    "UpdateRecords"
  ]
}
{
  "service": "codecommit",
  "actions": [
    "BatchGetRepositories",
    "CreateBranch",
    "CreateRepository",
    "DeleteRepository",
    "GetBlob",
    "GetBranch",
    "GetCommit",
    "GetDifferences",
    "GetRepository",
    "GetRepositoryTriggers",
    "ListBranches",
    "ListRepositories",
    "PutRepositoryTriggers",
    "TestRepositoryTriggers",
    "UpdateDefaultBranch",
    "UpdateRepositoryDescription",
    "UpdateRepositoryName"
  ]
}
{
  "service": "batch",
  "actions": [
    "CancelJob",
    "CreateComputeEnvironment",
    "CreateJobQueue",
    "DeleteComputeEnvironment",
    "DeleteJobQueue",
    "DeregisterJobDefinition",
    "DescribeComputeEnvironments",
    "DescribeJobDefinitions",
    "DescribeJobQueues",
    "DescribeJobs",
    "ListJobs",
    "RegisterJobDefinition",
    "SubmitJob",
    "TerminateJob",
    "UpdateComputeEnvironment",
    "UpdateJobQueue"
  ]
}
{
  "service": "codepipeline",
  "actions": [
    "AcknowledgeJob",
    "AcknowledgeThirdPartyJob",
    "CreateCustomActionType",
    "CreatePipeline",
    "DeleteCustomActionType",
    "DeletePipeline",
    "DisableStageTransition",
    "EnableStageTransition",
    "GetJobDetails",
    "GetPipeline",
    "GetPipelineExecution",
    "GetPipelineState",
    "GetThirdPartyJobDetails",
    "ListActionTypes",
    "ListPipelines",
    "PollForJobs",
    "PollForThirdPartyJobs",
    "PutActionRevision",
    "PutApprovalResult",
    "PutJobFailureResult",
    "PutJobSuccessResult",
    "PutThirdPartyJobFailureResult",
    "PutThirdPartyJobSuccessResult",
    "RetryStageExecution",
    "StartPipelineExecution",
    "UpdatePipeline"
  ]
}
{
  "service": "elasticloadbalancing",
  "actions": [
    "AddTags",
    "CreateListener",
    "CreateLoadBalancer",
    "CreateRule",
    "CreateTargetGroup",
    "DeleteListener",
    "DeleteLoadBalancer",
    "DeleteRule",
    "DeleteTargetGroup",
    "DeregisterTargets",
    "DescribeListeners",
    "DescribeLoadBalancerAttributes",
    "DescribeLoadBalancers",
    "DescribeRules",
    "DescribeSSLPolicies",
    "DescribeTags",
    "DescribeTargetGroupAttributes",
    "DescribeTargetGroups",
    "DescribeTargetHealth",
    "ModifyListener",
    "ModifyLoadBalancerAttributes",
    "ModifyRule",
    "ModifyTargetGroup",
    "ModifyTargetGroupAttributes",
    "RegisterTargets",
    "RemoveTags",
    "SetIpAddressType",
    "SetRulePriorities",
    "SetSecurityGroups",
    "SetSubnets"
  ]
}
{
  "service": "marketplacemetering",
  "actions": [
    "BatchMeterUsage",
    "MeterUsage",
    "ResolveCustomer"
  ]
}
{
  "service": "STS",
  "actions": [
    "AssumeRole",
    "AssumeRoleWithSAML",
    "AssumeRoleWithWebIdentity",
    "DecodeAuthorizationMessage",
    "GetCallerIdentity",
    "GetFederationToken",
    "GetSessionToken"
  ]
}
{
  "service": "ApplicationAutoScaling",
  "actions": [
    "DeleteScalingPolicy",
    "DeregisterScalableTarget",
    "DescribeScalableTargets",
    "DescribeScalingActivities",
    "DescribeScalingPolicies",
    "PutScalingPolicy",
    "RegisterScalableTarget"
  ]
}
{
  "service": "AmazonCloudWatchEvents",
  "actions": [
    "DeleteRule",
    "DescribeRule",
    "DisableRule",
    "EnableRule",
    "ListRuleNamesByTarget",
    "ListRules",
    "ListTargetsByRule",
    "PutEvents",
    "PutRule",
    "PutTargets",
    "RemoveTargets",
    "TestEventPattern"
  ]
}
{
  "service": "AmazonCloudWatch",
  "actions": [
    "DeleteAlarms",
    "DescribeAlarmHistory",
    "DescribeAlarms",
    "DescribeAlarmsForMetric",
    "DisableAlarmActions",
    "EnableAlarmActions",
    "GetMetricStatistics",
    "ListMetrics",
    "PutMetricAlarm",
    "PutMetricData",
    "SetAlarmState"
  ]
}
{
  "service": "amazondynamodb",
  "actions": [
    "BatchGetItem",
    "BatchWriteItem",
    "CreateTable",
    "DeleteItem",
    "DeleteTable",
    "DescribeLimits",
    "DescribeTable",
    "DescribeTimeToLive",
    "GetItem",
    "ListTables",
    "ListTagsOfResource",
    "PutItem",
    "Query",
    "Scan",
    "TagResource",
    "UntagResource",
    "UpdateItem",
    "UpdateTable",
    "UpdateTimeToLive",
    "DescribeStream",
    "GetRecords",
    "GetShardIterator",
    "ListStreams"
  ]
}
{
  "service": "AmazonECS",
  "actions": [
    "CreateCluster",
    "CreateService",
    "DeleteAttributes",
    "DeleteCluster",
    "DeleteService",
    "DeregisterContainerInstance",
    "DeregisterTaskDefinition",
    "DescribeClusters",
    "DescribeContainerInstances",
    "DescribeServices",
    "DescribeTaskDefinition",
    "DescribeTasks",
    "DiscoverPollEndpoint",
    "ListAttributes",
    "ListClusters",
    "ListContainerInstances",
    "ListServices",
    "ListTaskDefinitionFamilies",
    "ListTaskDefinitions",
    "ListTasks",
    "PutAttributes",
    "RegisterContainerInstance",
    "RegisterTaskDefinition",
    "RunTask",
    "StartTask",
    "StopTask",
    "SubmitContainerStateChange",
    "SubmitTaskStateChange",
    "UpdateContainerAgent",
    "UpdateContainerInstancesState",
    "UpdateService"
  ]
}
{
  "service": "AmazonCloudWatchLogs",
  "actions": [
    "CancelExportTask",
    "CreateExportTask",
    "CreateLogGroup",
    "CreateLogStream",
    "DeleteDestination",
    "DeleteLogGroup",
    "DeleteLogStream",
    "DeleteMetricFilter",
    "DeleteRetentionPolicy",
    "DeleteSubscriptionFilter",
    "DescribeDestinations",
    "DescribeExportTasks",
    "DescribeLogGroups",
    "DescribeLogStreams",
    "DescribeMetricFilters",
    "DescribeSubscriptionFilters",
    "FilterLogEvents",
    "GetLogEvents",
    "ListTagsLogGroup",
    "PutDestination",
    "PutDestinationPolicy",
    "PutLogEvents",
    "PutMetricFilter",
    "PutRetentionPolicy",
    "PutSubscriptionFilter",
    "TagLogGroup",
    "TestMetricFilter",
    "UntagLogGroup"
  ]
}
{
  "service": "AWSSimpleQueueService",
  "actions": [
    "AddPermission",
    "ChangeMessageVisibility",
    "ChangeMessageVisibilityBatch",
    "CreateQueue",
    "DeleteMessage",
    "DeleteMessageBatch",
    "DeleteQueue",
    "GetQueueAttributes",
    "GetQueueUrl",
    "ListDeadLetterSourceQueues",
    "ListQueues",
    "PurgeQueue",
    "ReceiveMessage",
    "RemovePermission",
    "SendMessage",
    "SendMessageBatch",
    "SetQueueAttributes"
  ]
}
{
  "service": "appstream2",
  "actions": [
    "AssociateFleet",
    "CreateFleet",
    "CreateStack",
    "CreateStreamingURL",
    "DeleteFleet",
    "DeleteStack",
    "DescribeFleets",
    "DescribeImages",
    "DescribeSessions",
    "DescribeStacks",
    "DisassociateFleet",
    "ExpireSession",
    "ListAssociatedFleets",
    "ListAssociatedStacks",
    "StartFleet",
    "StopFleet",
    "UpdateFleet",
    "UpdateStack"
  ]
}
{
  "service": "AmazonElastiCache",
  "actions": [
    "AddTagsToResource",
    "AuthorizeCacheSecurityGroupIngress",
    "CopySnapshot",
    "CreateCacheCluster",
    "CreateCacheParameterGroup",
    "CreateCacheSecurityGroup",
    "CreateCacheSubnetGroup",
    "CreateReplicationGroup",
    "CreateSnapshot",
    "DeleteCacheCluster",
    "DeleteCacheParameterGroup",
    "DeleteCacheSecurityGroup",
    "DeleteCacheSubnetGroup",
    "DeleteReplicationGroup",
    "DeleteSnapshot",
    "DescribeCacheClusters",
    "DescribeCacheEngineVersions",
    "DescribeCacheParameterGroups",
    "DescribeCacheParameters",
    "DescribeCacheSecurityGroups",
    "DescribeCacheSubnetGroups",
    "DescribeEngineDefaultParameters",
    "DescribeEvents",
    "DescribeReplicationGroups",
    "DescribeReservedCacheNodes",
    "DescribeReservedCacheNodesOfferings",
    "DescribeSnapshots",
    "ListAllowedNodeTypeModifications",
    "ListTagsForResource",
    "ModifyCacheCluster",
    "ModifyCacheParameterGroup",
    "ModifyCacheSubnetGroup",
    "ModifyReplicationGroup",
    "PurchaseReservedCacheNodesOffering",
    "RebootCacheCluster",
    "RemoveTagsFromResource",
    "ResetCacheParameterGroup",
    "RevokeCacheSecurityGroupIngress"
  ]
}
{
  "service": "AmazonECR",
  "actions": [
    "BatchCheckLayerAvailability",
    "BatchDeleteImage",
    "BatchGetImage",
    "CompleteLayerUpload",
    "CreateRepository",
    "DeleteRepository",
    "DeleteRepositoryPolicy",
    "DescribeImages",
    "DescribeRepositories",
    "GetAuthorizationToken",
    "GetDownloadUrlForLayer",
    "GetRepositoryPolicy",
    "InitiateLayerUpload",
    "ListImages",
    "PutImage",
    "SetRepositoryPolicy",
    "UploadLayerPart"
  ]
}
{
  "service": "application-discovery",
  "actions": [
    "AssociateConfigurationItemsToApplication",
    "CreateApplication",
    "CreateTags",
    "DeleteApplications",
    "DeleteTags",
    "DescribeAgents",
    "DescribeConfigurations",
    "DescribeExportConfigurations",
    "DescribeExportTasks",
    "DescribeTags",
    "DisassociateConfigurationItemsFromApplication",
    "ExportConfigurations",
    "GetDiscoverySummary",
    "ListConfigurations",
    "ListServerNeighbors",
    "StartDataCollectionByAgentIds",
    "StartExportTask",
    "StopDataCollectionByAgentIds",
    "UpdateApplication"
  ]
}
{
  "service": "codedeploy",
  "actions": [
    "AddTagsToOnPremisesInstances",
    "BatchGetApplicationRevisions",
    "BatchGetApplications",
    "BatchGetDeploymentGroups",
    "BatchGetDeploymentInstances",
    "BatchGetDeployments",
    "BatchGetOnPremisesInstances",
    "ContinueDeployment",
    "CreateApplication",
    "CreateDeployment",
    "CreateDeploymentConfig",
    "CreateDeploymentGroup",
    "DeleteApplication",
    "DeleteDeploymentConfig",
    "DeleteDeploymentGroup",
    "DeregisterOnPremisesInstance",
    "GetApplication",
    "GetApplicationRevision",
    "GetDeployment",
    "GetDeploymentConfig",
    "GetDeploymentGroup",
    "GetDeploymentInstance",
    "GetOnPremisesInstance",
    "ListApplicationRevisions",
    "ListApplications",
    "ListDeploymentConfigs",
    "ListDeploymentGroups",
    "ListDeploymentInstances",
    "ListDeployments",
    "ListOnPremisesInstances",
    "RegisterApplicationRevision",
    "RegisterOnPremisesInstance",
    "RemoveTagsFromOnPremisesInstances",
    "SkipWaitTimeForInstanceTermination",
    "StopDeployment",
    "UpdateApplication",
    "UpdateDeploymentGroup"
  ]
}
{
  "service": "cloudfront",
  "actions": [
    "CreateCloudFrontOriginAccessIdentity",
    "CreateDistribution",
    "CreateDistributionWithTags",
    "CreateInvalidation",
    "CreateStreamingDistribution",
    "CreateStreamingDistributionWithTags",
    "DeleteCloudFrontOriginAccessIdentity",
    "DeleteDistribution",
    "DeleteStreamingDistribution",
    "GetCloudFrontOriginAccessIdentity",
    "GetCloudFrontOriginAccessIdentityConfig",
    "GetDistribution",
    "GetDistributionConfig",
    "GetInvalidation",
    "GetStreamingDistribution",
    "GetStreamingDistributionConfig",
    "ListCloudFrontOriginAccessIdentities",
    "ListDistributions",
    "ListDistributionsByWebACLId",
    "ListInvalidations",
    "ListStreamingDistributions",
    "ListTagsForResource",
    "TagResource",
    "UntagResource",
    "UpdateCloudFrontOriginAccessIdentity",
    "UpdateDistribution",
    "UpdateStreamingDistribution"
  ]
}
{
  "service": "cognitoidentity",
  "actions": [
    "CreateIdentityPool",
    "DeleteIdentities",
    "DeleteIdentityPool",
    "DescribeIdentity",
    "DescribeIdentityPool",
    "GetCredentialsForIdentity",
    "GetId",
    "GetIdentityPoolRoles",
    "GetOpenIdToken",
    "GetOpenIdTokenForDeveloperIdentity",
    "ListIdentities",
    "ListIdentityPools",
    "LookupDeveloperIdentity",
    "MergeDeveloperIdentities",
    "SetIdentityPoolRoles",
    "UnlinkDeveloperIdentity",
    "UnlinkIdentity",
    "UpdateIdentityPool"
  ]
}
{
  "service": "health",
  "actions": [
    "DescribeAffectedEntities",
    "DescribeEntityAggregates",
    "DescribeEventAggregates",
    "DescribeEventDetails",
    "DescribeEvents",
    "DescribeEventTypes"
  ]
}
{
  "service": "codebuild",
  "actions": [
    "BatchGetBuilds",
    "BatchGetProjects",
    "CreateProject",
    "DeleteProject",
    "ListBuilds",
    "ListBuildsForProject",
    "ListCuratedEnvironmentImages",
    "ListProjects",
    "StartBuild",
    "StopBuild",
    "UpdateProject"
  ]
}
{
  "service": "inspector",
  "actions": [
    "AddAttributesToFindings",
    "CreateAssessmentTarget",
    "CreateAssessmentTemplate",
    "CreateResourceGroup",
    "DeleteAssessmentRun",
    "DeleteAssessmentTarget",
    "DeleteAssessmentTemplate",
    "DescribeAssessmentRuns",
    "DescribeAssessmentTargets",
    "DescribeAssessmentTemplates",
    "DescribeCrossAccountAccessRole",
    "DescribeFindings",
    "DescribeResourceGroups",
    "DescribeRulesPackages",
    "GetTelemetryMetadata",
    "ListAssessmentRunAgents",
    "ListAssessmentRuns",
    "ListAssessmentTargets",
    "ListAssessmentTemplates",
    "ListEventSubscriptions",
    "ListFindings",
    "ListRulesPackages",
    "ListTagsForResource",
    "PreviewAgents",
    "RegisterCrossAccountAccessRole",
    "RemoveAttributesFromFindings",
    "SetTagsForResource",
    "StartAssessmentRun",
    "StopAssessmentRun",
    "SubscribeToEvent",
    "UnsubscribeFromEvent",
    "UpdateAssessmentTarget"
  ]
}
{
  "service": "firehose",
  "actions": [
    "CreateDeliveryStream",
    "DeleteDeliveryStream",
    "DescribeDeliveryStream",
    "ListDeliveryStreams",
    "PutRecord",
    "PutRecordBatch",
    "UpdateDestination"
  ]
}
{
  "service": "directconnect",
  "actions": [
    "AllocateConnectionOnInterconnect",
    "AllocateHostedConnection",
    "AllocatePrivateVirtualInterface",
    "AllocatePublicVirtualInterface",
    "AssociateConnectionWithLag",
    "AssociateHostedConnection",
    "AssociateVirtualInterface",
    "ConfirmConnection",
    "ConfirmPrivateVirtualInterface",
    "ConfirmPublicVirtualInterface",
    "CreateBGPPeer",
    "CreateConnection",
    "CreateInterconnect",
    "CreateLag",
    "CreatePrivateVirtualInterface",
    "CreatePublicVirtualInterface",
    "DeleteBGPPeer",
    "DeleteConnection",
    "DeleteInterconnect",
    "DeleteLag",
    "DeleteVirtualInterface",
    "DescribeConnectionLoa",
    "DescribeConnections",
    "DescribeConnectionsOnInterconnect",
    "DescribeHostedConnections",
    "DescribeInterconnectLoa",
    "DescribeInterconnects",
    "DescribeLags",
    "DescribeLoa",
    "DescribeLocations",
    "DescribeTags",
    "DescribeVirtualGateways",
    "DescribeVirtualInterfaces",
    "DisassociateConnectionFromLag",
    "TagResource",
    "UntagResource",
    "UpdateLag"
  ]
}
{
  "service": "AutoScaling",
  "actions": [
    "AttachInstances",
    "AttachLoadBalancers",
    "AttachLoadBalancerTargetGroups",
    "CompleteLifecycleAction",
    "CreateAutoScalingGroup",
    "CreateLaunchConfiguration",
    "CreateOrUpdateTags",
    "DeleteAutoScalingGroup",
    "DeleteLaunchConfiguration",
    "DeleteLifecycleHook",
    "DeleteNotificationConfiguration",
    "DeletePolicy",
    "DeleteScheduledAction",
    "DeleteTags",
    "DescribeAccountLimits",
    "DescribeAdjustmentTypes",
    "DescribeAutoScalingGroups",
    "DescribeAutoScalingInstances",
    "DescribeAutoScalingNotificationTypes",
    "DescribeLaunchConfigurations",
    "DescribeLifecycleHooks",
    "DescribeLifecycleHookTypes",
    "DescribeLoadBalancers",
    "DescribeLoadBalancerTargetGroups",
    "DescribeMetricCollectionTypes",
    "DescribeNotificationConfigurations",
    "DescribePolicies",
    "DescribeScalingActivities",
    "DescribeScalingProcessTypes",
    "DescribeScheduledActions",
    "DescribeTags",
    "DescribeTerminationPolicyTypes",
    "DetachInstances",
    "DetachLoadBalancers",
    "DetachLoadBalancerTargetGroups",
    "DisableMetricsCollection",
    "EnableMetricsCollection",
    "EnterStandby",
    "ExecutePolicy",
    "ExitStandby",
    "PutLifecycleHook",
    "PutNotificationConfiguration",
    "PutScalingPolicy",
    "PutScheduledUpdateGroupAction",
    "RecordLifecycleActionHeartbeat",
    "ResumeProcesses",
    "SetDesiredCapacity",
    "SetInstanceHealth",
    "SetInstanceProtection",
    "SuspendProcesses",
    "TerminateInstanceInAutoScalingGroup",
    "UpdateAutoScalingGroup"
  ]
}
{
  "service": "machine-learning",
  "actions": [
    "AddTags",
    "CreateBatchPrediction",
    "CreateDataSourceFromRDS",
    "CreateDataSourceFromRedshift",
    "CreateDataSourceFromS3",
    "CreateEvaluation",
    "CreateMLModel",
    "CreateRealtimeEndpoint",
    "DeleteBatchPrediction",
    "DeleteDataSource",
    "DeleteEvaluation",
    "DeleteMLModel",
    "DeleteRealtimeEndpoint",
    "DeleteTags",
    "DescribeBatchPredictions",
    "DescribeDataSources",
    "DescribeEvaluations",
    "DescribeMLModels",
    "DescribeTags",
    "GetBatchPrediction",
    "GetDataSource",
    "GetEvaluation",
    "GetMLModel",
    "Predict",
    "UpdateBatchPrediction",
    "UpdateDataSource",
    "UpdateEvaluation",
    "UpdateMLModel"
  ]
}
{
  "service": "config",
  "actions": [
    "DeleteConfigRule",
    "DeleteConfigurationRecorder",
    "DeleteDeliveryChannel",
    "DeleteEvaluationResults",
    "DeliverConfigSnapshot",
    "DescribeComplianceByConfigRule",
    "DescribeComplianceByResource",
    "DescribeConfigRuleEvaluationStatus",
    "DescribeConfigRules",
    "DescribeConfigurationRecorders",
    "DescribeConfigurationRecorderStatus",
    "DescribeDeliveryChannels",
    "DescribeDeliveryChannelStatus",
    "GetComplianceDetailsByConfigRule",
    "GetComplianceDetailsByResource",
    "GetComplianceSummaryByConfigRule",
    "GetComplianceSummaryByResourceType",
    "GetResourceConfigHistory",
    "ListDiscoveredResources",
    "PutConfigRule",
    "PutConfigurationRecorder",
    "PutDeliveryChannel",
    "PutEvaluations",
    "StartConfigRulesEvaluation",
    "StartConfigurationRecorder",
    "StopConfigurationRecorder"
  ]
}
{
  "service": "devicefarm",
  "actions": [
    "CreateDevicePool",
    "CreateNetworkProfile",
    "CreateProject",
    "CreateRemoteAccessSession",
    "CreateUpload",
    "DeleteDevicePool",
    "DeleteNetworkProfile",
    "DeleteProject",
    "DeleteRemoteAccessSession",
    "DeleteRun",
    "DeleteUpload",
    "GetAccountSettings",
    "GetDevice",
    "GetDevicePool",
    "GetDevicePoolCompatibility",
    "GetJob",
    "GetNetworkProfile",
    "GetOfferingStatus",
    "GetProject",
    "GetRemoteAccessSession",
    "GetRun",
    "GetSuite",
    "GetTest",
    "GetUpload",
    "InstallToRemoteAccessSession",
    "ListArtifacts",
    "ListDevicePools",
    "ListDevices",
    "ListJobs",
    "ListNetworkProfiles",
    "ListOfferings",
    "ListOfferingTransactions",
    "ListProjects",
    "ListRemoteAccessSessions",
    "ListRuns",
    "ListSamples",
    "ListSuites",
    "ListTests",
    "ListUniqueProblems",
    "ListUploads",
    "PurchaseOffering",
    "RenewOffering",
    "ScheduleRun",
    "StopRemoteAccessSession",
    "StopRun",
    "UpdateDevicePool",
    "UpdateNetworkProfile",
    "UpdateProject"
  ]
}
{
  "service": "kms",
  "actions": [
    "CancelKeyDeletion",
    "CreateAlias",
    "CreateGrant",
    "CreateKey",
    "Decrypt",
    "DeleteAlias",
    "DeleteImportedKeyMaterial",
    "DescribeKey",
    "DisableKey",
    "DisableKeyRotation",
    "EnableKey",
    "EnableKeyRotation",
    "Encrypt",
    "GenerateDataKey",
    "GenerateDataKeyWithoutPlaintext",
    "GenerateRandom",
    "GetKeyPolicy",
    "GetKeyRotationStatus",
    "GetParametersForImport",
    "ImportKeyMaterial",
    "ListAliases",
    "ListGrants",
    "ListKeyPolicies",
    "ListKeys",
    "ListResourceTags",
    "ListRetirableGrants",
    "PutKeyPolicy",
    "ReEncrypt",
    "RetireGrant",
    "RevokeGrant",
    "ScheduleKeyDeletion",
    "TagResource",
    "UntagResource",
    "UpdateAlias",
    "UpdateKeyDescription"
  ]
}
{
  "service": "datapipeline",
  "actions": [
    "ActivatePipeline",
    "AddTags",
    "CreatePipeline",
    "DeactivatePipeline",
    "DeletePipeline",
    "DescribeObjects",
    "DescribePipelines",
    "EvaluateExpression",
    "GetPipelineDefinition",
    "ListPipelines",
    "PollForTask",
    "PutPipelineDefinition",
    "QueryObjects",
    "RemoveTags",
    "ReportTaskProgress",
    "ReportTaskRunnerHeartbeat",
    "SetStatus",
    "SetTaskStatus",
    "ValidatePipelineDefinition"
  ]
}
{
  "service": "dms",
  "actions": [
    "AddTagsToResource",
    "CreateEndpoint",
    "CreateEventSubscription",
    "CreateReplicationInstance",
    "CreateReplicationSubnetGroup",
    "CreateReplicationTask",
    "DeleteCertificate",
    "DeleteEndpoint",
    "DeleteEventSubscription",
    "DeleteReplicationInstance",
    "DeleteReplicationSubnetGroup",
    "DeleteReplicationTask",
    "DescribeAccountAttributes",
    "DescribeCertificates",
    "DescribeConnections",
    "DescribeEndpoints",
    "DescribeEndpointTypes",
    "DescribeEventCategories",
    "DescribeEvents",
    "DescribeEventSubscriptions",
    "DescribeOrderableReplicationInstances",
    "DescribeRefreshSchemasStatus",
    "DescribeReplicationInstances",
    "DescribeReplicationSubnetGroups",
    "DescribeReplicationTasks",
    "DescribeSchemas",
    "DescribeTableStatistics",
    "ImportCertificate",
    "ListTagsForResource",
    "ModifyEndpoint",
    "ModifyEventSubscription",
    "ModifyReplicationInstance",
    "ModifyReplicationSubnetGroup",
    "ModifyReplicationTask",
    "RefreshSchemas",
    "ReloadTables",
    "RemoveTagsFromResource",
    "StartReplicationTask",
    "StopReplicationTask",
    "TestConnection"
  ]
}
{
  "service": "ServerMigration",
  "actions": [
    "CreateReplicationJob",
    "DeleteReplicationJob",
    "DeleteServerCatalog",
    "DisassociateConnector",
    "GetConnectors",
    "GetReplicationJobs",
    "GetReplicationRuns",
    "GetServers",
    "ImportServerCatalog",
    "StartOnDemandReplicationRun",
    "UpdateReplicationJob"
  ]
}
{
  "service": "ses",
  "actions": [
    "CloneReceiptRuleSet",
    "CreateConfigurationSet",
    "CreateConfigurationSetEventDestination",
    "CreateReceiptFilter",
    "CreateReceiptRule",
    "CreateReceiptRuleSet",
    "DeleteConfigurationSet",
    "DeleteConfigurationSetEventDestination",
    "DeleteIdentity",
    "DeleteIdentityPolicy",
    "DeleteReceiptFilter",
    "DeleteReceiptRule",
    "DeleteReceiptRuleSet",
    "DeleteVerifiedEmailAddress",
    "DescribeActiveReceiptRuleSet",
    "DescribeConfigurationSet",
    "DescribeReceiptRule",
    "DescribeReceiptRuleSet",
    "GetIdentityDkimAttributes",
    "GetIdentityMailFromDomainAttributes",
    "GetIdentityNotificationAttributes",
    "GetIdentityPolicies",
    "GetIdentityVerificationAttributes",
    "GetSendQuota",
    "GetSendStatistics",
    "ListConfigurationSets",
    "ListIdentities",
    "ListIdentityPolicies",
    "ListReceiptFilters",
    "ListReceiptRuleSets",
    "ListVerifiedEmailAddresses",
    "PutIdentityPolicy",
    "ReorderReceiptRuleSet",
    "SendBounce",
    "SendEmail",
    "SendRawEmail",
    "SetActiveReceiptRuleSet",
    "SetIdentityDkimEnabled",
    "SetIdentityFeedbackForwardingEnabled",
    "SetIdentityHeadersInNotificationsEnabled",
    "SetIdentityMailFromDomain",
    "SetIdentityNotificationTopic",
    "SetReceiptRulePosition",
    "UpdateConfigurationSetEventDestination",
    "UpdateReceiptRule",
    "VerifyDomainDkim",
    "VerifyDomainIdentity",
    "VerifyEmailAddress",
    "VerifyEmailIdentity"
  ]
}
{
  "service": "kinesis",
  "actions": [
    "AddTagsToStream",
    "CreateStream",
    "DecreaseStreamRetentionPeriod",
    "DeleteStream",
    "DescribeLimits",
    "DescribeStream",
    "DisableEnhancedMonitoring",
    "EnableEnhancedMonitoring",
    "GetRecords",
    "GetShardIterator",
    "IncreaseStreamRetentionPeriod",
    "ListStreams",
    "ListTagsForStream",
    "MergeShards",
    "PutRecord",
    "PutRecords",
    "RemoveTagsFromStream",
    "SplitShard",
    "UpdateShardCount"
  ]
}
{
  "service": "workdocs",
  "actions": [
    "AbortDocumentVersionUpload",
    "ActivateUser",
    "AddResourcePermissions",
    "CreateFolder",
    "CreateNotificationSubscription",
    "CreateUser",
    "DeactivateUser",
    "DeleteDocument",
    "DeleteFolder",
    "DeleteFolderContents",
    "DeleteNotificationSubscription",
    "DeleteUser",
    "DescribeDocumentVersions",
    "DescribeFolderContents",
    "DescribeNotificationSubscriptions",
    "DescribeResourcePermissions",
    "DescribeUsers",
    "GetDocument",
    "GetDocumentPath",
    "GetDocumentVersion",
    "GetFolder",
    "GetFolderPath",
    "InitiateDocumentVersionUpload",
    "RemoveAllResourcePermissions",
    "RemoveResourcePermission",
    "UpdateDocument",
    "UpdateDocumentVersion",
    "UpdateFolder",
    "UpdateUser"
  ]
}
{
  "service": "opsworks",
  "actions": [
    "AssignInstance",
    "AssignVolume",
    "AssociateElasticIp",
    "AttachElasticLoadBalancer",
    "CloneStack",
    "CreateApp",
    "CreateDeployment",
    "CreateInstance",
    "CreateLayer",
    "CreateStack",
    "CreateUserProfile",
    "DeleteApp",
    "DeleteInstance",
    "DeleteLayer",
    "DeleteStack",
    "DeleteUserProfile",
    "DeregisterEcsCluster",
    "DeregisterElasticIp",
    "DeregisterInstance",
    "DeregisterRdsDbInstance",
    "DeregisterVolume",
    "DescribeAgentVersions",
    "DescribeApps",
    "DescribeCommands",
    "DescribeDeployments",
    "DescribeEcsClusters",
    "DescribeElasticIps",
    "DescribeElasticLoadBalancers",
    "DescribeInstances",
    "DescribeLayers",
    "DescribeLoadBasedAutoScaling",
    "DescribeMyUserProfile",
    "DescribePermissions",
    "DescribeRaidArrays",
    "DescribeRdsDbInstances",
    "DescribeServiceErrors",
    "DescribeStackProvisioningParameters",
    "DescribeStacks",
    "DescribeStackSummary",
    "DescribeTimeBasedAutoScaling",
    "DescribeUserProfiles",
    "DescribeVolumes",
    "DetachElasticLoadBalancer",
    "DisassociateElasticIp",
    "GetHostnameSuggestion",
    "GrantAccess",
    "RebootInstance",
    "RegisterEcsCluster",
    "RegisterElasticIp",
    "RegisterInstance",
    "RegisterRdsDbInstance",
    "RegisterVolume",
    "SetLoadBasedAutoScaling",
    "SetPermission",
    "SetTimeBasedAutoScaling",
    "StartInstance",
    "StartStack",
    "StopInstance",
    "StopStack",
    "UnassignInstance",
    "UnassignVolume",
    "UpdateApp",
    "UpdateElasticIp",
    "UpdateInstance",
    "UpdateLayer",
    "UpdateMyUserProfile",
    "UpdateRdsDbInstance",
    "UpdateStack",
    "UpdateUserProfile",
    "UpdateVolume"
  ]
}
{
  "service": "opsworks-cm",
  "actions": [
    "AssociateNode",
    "CreateBackup",
    "CreateServer",
    "DeleteBackup",
    "DeleteServer",
    "DescribeAccountAttributes",
    "DescribeBackups",
    "DescribeEvents",
    "DescribeNodeAssociationStatus",
    "DescribeServers",
    "DisassociateNode",
    "RestoreServer",
    "StartMaintenance",
    "UpdateServer",
    "UpdateServerEngineAttributes"
  ]
}
{
  "service": "organizations",
  "actions": [
    "AcceptHandshake",
    "AttachPolicy",
    "CancelHandshake",
    "CreateAccount",
    "CreateOrganization",
    "CreateOrganizationalUnit",
    "CreatePolicy",
    "DeclineHandshake",
    "DeleteOrganization",
    "DeleteOrganizationalUnit",
    "DeletePolicy",
    "DescribeAccount",
    "DescribeCreateAccountStatus",
    "DescribeHandshake",
    "DescribeOrganization",
    "DescribeOrganizationalUnit",
    "DescribePolicy",
    "DetachPolicy",
    "DisablePolicyType",
    "EnableAllFeatures",
    "EnablePolicyType",
    "InviteAccountToOrganization",
    "LeaveOrganization",
    "ListAccounts",
    "ListAccountsForParent",
    "ListChildren",
    "ListCreateAccountStatus",
    "ListHandshakesForAccount",
    "ListHandshakesForOrganization",
    "ListOrganizationalUnitsForParent",
    "ListParents",
    "ListPolicies",
    "ListPoliciesForTarget",
    "ListRoots",
    "ListTargetsForPolicy",
    "MoveAccount",
    "RemoveAccountFromOrganization",
    "UpdateOrganizationalUnit",
    "UpdatePolicy"
  ]
}
{
  "service": "AmazonRDS",
  "actions": [
    "AddRoleToDBCluster",
    "AddSourceIdentifierToSubscription",
    "AddTagsToResource",
    "ApplyPendingMaintenanceAction",
    "AuthorizeDBSecurityGroupIngress",
    "CopyDBClusterParameterGroup",
    "CopyDBClusterSnapshot",
    "CopyDBParameterGroup",
    "CopyDBSnapshot",
    "CopyOptionGroup",
    "CreateDBCluster",
    "CreateDBClusterParameterGroup",
    "CreateDBClusterSnapshot",
    "CreateDBInstance",
    "CreateDBInstanceReadReplica",
    "CreateDBParameterGroup",
    "CreateDBSecurityGroup",
    "CreateDBSnapshot",
    "CreateDBSubnetGroup",
    "CreateEventSubscription",
    "CreateOptionGroup",
    "DeleteDBCluster",
    "DeleteDBClusterParameterGroup",
    "DeleteDBClusterSnapshot",
    "DeleteDBInstance",
    "DeleteDBParameterGroup",
    "DeleteDBSecurityGroup",
    "DeleteDBSnapshot",
    "DeleteDBSubnetGroup",
    "DeleteEventSubscription",
    "DeleteOptionGroup",
    "DescribeAccountAttributes",
    "DescribeCertificates",
    "DescribeDBClusterParameterGroups",
    "DescribeDBClusterParameters",
    "DescribeDBClusters",
    "DescribeDBClusterSnapshotAttributes",
    "DescribeDBClusterSnapshots",
    "DescribeDBEngineVersions",
    "DescribeDBInstances",
    "DescribeDBLogFiles",
    "DescribeDBParameterGroups",
    "DescribeDBParameters",
    "DescribeDBSecurityGroups",
    "DescribeDBSnapshotAttributes",
    "DescribeDBSnapshots",
    "DescribeDBSubnetGroups",
    "DescribeEngineDefaultClusterParameters",
    "DescribeEngineDefaultParameters",
    "DescribeEventCategories",
    "DescribeEvents",
    "DescribeEventSubscriptions",
    "DescribeOptionGroupOptions",
    "DescribeOptionGroups",
    "DescribeOrderableDBInstanceOptions",
    "DescribePendingMaintenanceActions",
    "DescribeReservedDBInstances",
    "DescribeReservedDBInstancesOfferings",
    "DescribeSourceRegions",
    "DownloadDBLogFilePortion",
    "FailoverDBCluster",
    "ListTagsForResource",
    "ModifyDBCluster",
    "ModifyDBClusterParameterGroup",
    "ModifyDBClusterSnapshotAttribute",
    "ModifyDBInstance",
    "ModifyDBParameterGroup",
    "ModifyDBSnapshot",
    "ModifyDBSnapshotAttribute",
    "ModifyDBSubnetGroup",
    "ModifyEventSubscription",
    "ModifyOptionGroup",
    "PromoteReadReplica",
    "PromoteReadReplicaDBCluster",
    "PurchaseReservedDBInstancesOffering",
    "RebootDBInstance",
    "RemoveRoleFromDBCluster",
    "RemoveSourceIdentifierFromSubscription",
    "RemoveTagsFromResource",
    "ResetDBClusterParameterGroup",
    "ResetDBParameterGroup",
    "RestoreDBClusterFromS3",
    "RestoreDBClusterFromSnapshot",
    "RestoreDBClusterToPointInTime",
    "RestoreDBInstanceFromDBSnapshot",
    "RestoreDBInstanceToPointInTime",
    "RevokeDBSecurityGroupIngress"
  ]
}
{
  "service": "IAM",
  "actions": [
    "AddClientIDToOpenIDConnectProvider",
    "AddRoleToInstanceProfile",
    "AddUserToGroup",
    "AttachGroupPolicy",
    "AttachRolePolicy",
    "AttachUserPolicy",
    "ChangePassword",
    "CreateAccessKey",
    "CreateAccountAlias",
    "CreateGroup",
    "CreateInstanceProfile",
    "CreateLoginProfile",
    "CreateOpenIDConnectProvider",
    "CreatePolicy",
    "CreatePolicyVersion",
    "CreateRole",
    "CreateSAMLProvider",
    "CreateServiceSpecificCredential",
    "CreateUser",
    "CreateVirtualMFADevice",
    "DeactivateMFADevice",
    "DeleteAccessKey",
    "DeleteAccountAlias",
    "DeleteAccountPasswordPolicy",
    "DeleteGroup",
    "DeleteGroupPolicy",
    "DeleteInstanceProfile",
    "DeleteLoginProfile",
    "DeleteOpenIDConnectProvider",
    "DeletePolicy",
    "DeletePolicyVersion",
    "DeleteRole",
    "DeleteRolePolicy",
    "DeleteSAMLProvider",
    "DeleteServerCertificate",
    "DeleteServiceSpecificCredential",
    "DeleteSigningCertificate",
    "DeleteSSHPublicKey",
    "DeleteUser",
    "DeleteUserPolicy",
    "DeleteVirtualMFADevice",
    "DetachGroupPolicy",
    "DetachRolePolicy",
    "DetachUserPolicy",
    "EnableMFADevice",
    "GenerateCredentialReport",
    "GetAccessKeyLastUsed",
    "GetAccountAuthorizationDetails",
    "GetAccountPasswordPolicy",
    "GetAccountSummary",
    "GetContextKeysForCustomPolicy",
    "GetContextKeysForPrincipalPolicy",
    "GetCredentialReport",
    "GetGroup",
    "GetGroupPolicy",
    "GetInstanceProfile",
    "GetLoginProfile",
    "GetOpenIDConnectProvider",
    "GetPolicy",
    "GetPolicyVersion",
    "GetRole",
    "GetRolePolicy",
    "GetSAMLProvider",
    "GetServerCertificate",
    "GetSSHPublicKey",
    "GetUser",
    "GetUserPolicy",
    "ListAccessKeys",
    "ListAccountAliases",
    "ListAttachedGroupPolicies",
    "ListAttachedRolePolicies",
    "ListAttachedUserPolicies",
    "ListEntitiesForPolicy",
    "ListGroupPolicies",
    "ListGroups",
    "ListGroupsForUser",
    "ListInstanceProfiles",
    "ListInstanceProfilesForRole",
    "ListMFADevices",
    "ListOpenIDConnectProviders",
    "ListPolicies",
    "ListPolicyVersions",
    "ListRolePolicies",
    "ListRoles",
    "ListSAMLProviders",
    "ListServerCertificates",
    "ListServiceSpecificCredentials",
    "ListSigningCertificates",
    "ListSSHPublicKeys",
    "ListUserPolicies",
    "ListUsers",
    "ListVirtualMFADevices",
    "PutGroupPolicy",
    "PutRolePolicy",
    "PutUserPolicy",
    "RemoveClientIDFromOpenIDConnectProvider",
    "RemoveRoleFromInstanceProfile",
    "RemoveUserFromGroup",
    "ResetServiceSpecificCredential",
    "ResyncMFADevice",
    "SetDefaultPolicyVersion",
    "SimulateCustomPolicy",
    "SimulatePrincipalPolicy",
    "UpdateAccessKey",
    "UpdateAccountPasswordPolicy",
    "UpdateAssumeRolePolicy",
    "UpdateGroup",
    "UpdateLoginProfile",
    "UpdateOpenIDConnectProviderThumbprint",
    "UpdateSAMLProvider",
    "UpdateServerCertificate",
    "UpdateServiceSpecificCredential",
    "UpdateSigningCertificate",
    "UpdateSSHPublicKey",
    "UpdateUser",
    "UploadServerCertificate",
    "UploadSigningCertificate",
    "UploadSSHPublicKey"
  ]
}
{
  "service": "redshift",
  "actions": [
    "AuthorizeClusterSecurityGroupIngress",
    "AuthorizeSnapshotAccess",
    "CopyClusterSnapshot",
    "CreateCluster",
    "CreateClusterParameterGroup",
    "CreateClusterSecurityGroup",
    "CreateClusterSnapshot",
    "CreateClusterSubnetGroup",
    "CreateEventSubscription",
    "CreateHsmClientCertificate",
    "CreateHsmConfiguration",
    "CreateSnapshotCopyGrant",
    "CreateTags",
    "DeleteCluster",
    "DeleteClusterParameterGroup",
    "DeleteClusterSecurityGroup",
    "DeleteClusterSnapshot",
    "DeleteClusterSubnetGroup",
    "DeleteEventSubscription",
    "DeleteHsmClientCertificate",
    "DeleteHsmConfiguration",
    "DeleteSnapshotCopyGrant",
    "DeleteTags",
    "DescribeClusterParameterGroups",
    "DescribeClusterParameters",
    "DescribeClusters",
    "DescribeClusterSecurityGroups",
    "DescribeClusterSnapshots",
    "DescribeClusterSubnetGroups",
    "DescribeClusterVersions",
    "DescribeDefaultClusterParameters",
    "DescribeEventCategories",
    "DescribeEvents",
    "DescribeEventSubscriptions",
    "DescribeHsmClientCertificates",
    "DescribeHsmConfigurations",
    "DescribeLoggingStatus",
    "DescribeOrderableClusterOptions",
    "DescribeReservedNodeOfferings",
    "DescribeReservedNodes",
    "DescribeResize",
    "DescribeSnapshotCopyGrants",
    "DescribeTableRestoreStatus",
    "DescribeTags",
    "DisableLogging",
    "DisableSnapshotCopy",
    "EnableLogging",
    "EnableSnapshotCopy",
    "ModifyCluster",
    "ModifyClusterIamRoles",
    "ModifyClusterParameterGroup",
    "ModifyClusterSubnetGroup",
    "ModifyEventSubscription",
    "ModifySnapshotCopyRetentionPeriod",
    "PurchaseReservedNodeOffering",
    "RebootCluster",
    "ResetClusterParameterGroup",
    "RestoreFromClusterSnapshot",
    "RestoreTableFromClusterSnapshot",
    "RevokeClusterSecurityGroupIngress",
    "RevokeSnapshotAccess",
    "RotateEncryptionKey"
  ]
}
{
  "service": "AWSCloudFormation",
  "actions": [
    "CancelUpdateStack",
    "ContinueUpdateRollback",
    "CreateChangeSet",
    "CreateStack",
    "DeleteChangeSet",
    "DeleteStack",
    "DescribeAccountLimits",
    "DescribeChangeSet",
    "DescribeStackEvents",
    "DescribeStackResource",
    "DescribeStackResources",
    "DescribeStacks",
    "EstimateTemplateCost",
    "ExecuteChangeSet",
    "GetStackPolicy",
    "GetTemplate",
    "GetTemplateSummary",
    "ListChangeSets",
    "ListExports",
    "ListImports",
    "ListStackResources",
    "ListStacks",
    "SetStackPolicy",
    "SignalResource",
    "UpdateStack",
    "ValidateTemplate"
  ]
}
{
  "service": "waf",
  "actions": [
    "CreateByteMatchSet",
    "CreateIPSet",
    "CreateRule",
    "CreateSizeConstraintSet",
    "CreateSqlInjectionMatchSet",
    "CreateWebACL",
    "CreateXssMatchSet",
    "DeleteByteMatchSet",
    "DeleteIPSet",
    "DeleteRule",
    "DeleteSizeConstraintSet",
    "DeleteSqlInjectionMatchSet",
    "DeleteWebACL",
    "DeleteXssMatchSet",
    "GetByteMatchSet",
    "GetChangeToken",
    "GetChangeTokenStatus",
    "GetIPSet",
    "GetRule",
    "GetSampledRequests",
    "GetSizeConstraintSet",
    "GetSqlInjectionMatchSet",
    "GetWebACL",
    "GetXssMatchSet",
    "ListByteMatchSets",
    "ListIPSets",
    "ListRules",
    "ListSizeConstraintSets",
    "ListSqlInjectionMatchSets",
    "ListWebACLs",
    "ListXssMatchSets",
    "UpdateByteMatchSet",
    "UpdateIPSet",
    "UpdateRule",
    "UpdateSizeConstraintSet",
    "UpdateSqlInjectionMatchSet",
    "UpdateWebACL",
    "UpdateXssMatchSet",
    "AssociateWebACL",
    "CreateByteMatchSet",
    "CreateIPSet",
    "CreateRule",
    "CreateSizeConstraintSet",
    "CreateSqlInjectionMatchSet",
    "CreateWebACL",
    "CreateXssMatchSet",
    "DeleteByteMatchSet",
    "DeleteIPSet",
    "DeleteRule",
    "DeleteSizeConstraintSet",
    "DeleteSqlInjectionMatchSet",
    "DeleteWebACL",
    "DeleteXssMatchSet",
    "DisassociateWebACL",
    "GetByteMatchSet",
    "GetChangeToken",
    "GetChangeTokenStatus",
    "GetIPSet",
    "GetRule",
    "GetSampledRequests",
    "GetSizeConstraintSet",
    "GetSqlInjectionMatchSet",
    "GetWebACL",
    "GetWebACLForResource",
    "GetXssMatchSet",
    "ListByteMatchSets",
    "ListIPSets",
    "ListResourcesForWebACL",
    "ListRules",
    "ListSizeConstraintSets",
    "ListSqlInjectionMatchSets",
    "ListWebACLs",
    "ListXssMatchSets",
    "UpdateByteMatchSet",
    "UpdateIPSet",
    "UpdateRule",
    "UpdateSizeConstraintSet",
    "UpdateSqlInjectionMatchSet",
    "UpdateWebACL",
    "UpdateXssMatchSet"
  ]
}
{
  "service": "directoryservice",
  "actions": [
    "AddFacetToObject",
    "ApplySchema",
    "AttachObject",
    "AttachPolicy",
    "AttachToIndex",
    "BatchRead",
    "BatchWrite",
    "CreateDirectory",
    "CreateFacet",
    "CreateIndex",
    "CreateObject",
    "CreateSchema",
    "DeleteDirectory",
    "DeleteFacet",
    "DeleteObject",
    "DeleteSchema",
    "DetachFromIndex",
    "DetachObject",
    "DetachPolicy",
    "DisableDirectory",
    "EnableDirectory",
    "GetDirectory",
    "GetFacet",
    "GetObjectInformation",
    "GetSchemaAsJson",
    "ListAppliedSchemaArns",
    "ListAttachedIndices",
    "ListDevelopmentSchemaArns",
    "ListDirectories",
    "ListFacetAttributes",
    "ListFacetNames",
    "ListIndex",
    "ListObjectAttributes",
    "ListObjectChildren",
    "ListObjectParentPaths",
    "ListObjectParents",
    "ListObjectPolicies",
    "ListPolicyAttachments",
    "ListPublishedSchemaArns",
    "ListTagsForResource",
    "LookupPolicy",
    "PublishSchema",
    "PutSchemaFromJson",
    "RemoveFacetFromObject",
    "TagResource",
    "UntagResource",
    "UpdateFacet",
    "UpdateObjectAttributes",
    "UpdateSchema"
  ]
}
{
  "service": "Route53",
  "actions": [
    "AssociateVPCWithHostedZone",
    "ChangeResourceRecordSets",
    "ChangeTagsForResource",
    "CreateHealthCheck",
    "CreateHostedZone",
    "CreateReusableDelegationSet",
    "CreateTrafficPolicy",
    "CreateTrafficPolicyInstance",
    "CreateTrafficPolicyVersion",
    "CreateVPCAssociationAuthorization",
    "DeleteHealthCheck",
    "DeleteHostedZone",
    "DeleteReusableDelegationSet",
    "DeleteTrafficPolicy",
    "DeleteTrafficPolicyInstance",
    "DeleteVPCAssociationAuthorization",
    "DisassociateVPCFromHostedZone",
    "GetChange",
    "GetCheckerIpRanges",
    "GetGeoLocation",
    "GetHealthCheck",
    "GetHealthCheckCount",
    "GetHealthCheckLastFailureReason",
    "GetHealthCheckStatus",
    "GetHostedZone",
    "GetHostedZoneCount",
    "GetReusableDelegationSet",
    "GetTrafficPolicy",
    "GetTrafficPolicyInstance",
    "GetTrafficPolicyInstanceCount",
    "ListGeoLocations",
    "ListHealthChecks",
    "ListHostedZones",
    "ListHostedZonesByName",
    "ListResourceRecordSets",
    "ListReusableDelegationSets",
    "ListTagsForResource",
    "ListTagsForResources",
    "ListTrafficPolicies",
    "ListTrafficPolicyInstances",
    "ListTrafficPolicyInstancesByHostedZone",
    "ListTrafficPolicyInstancesByPolicy",
    "ListTrafficPolicyVersions",
    "ListVPCAssociationAuthorizations",
    "TestDNSAnswer",
    "UpdateHealthCheck",
    "UpdateHostedZoneComment",
    "UpdateTrafficPolicyComment",
    "UpdateTrafficPolicyInstance",
    "CheckDomainAvailability",
    "DeleteTagsForDomain",
    "DisableDomainAutoRenew",
    "DisableDomainTransferLock",
    "EnableDomainAutoRenew",
    "EnableDomainTransferLock",
    "GetContactReachabilityStatus",
    "GetDomainDetail",
    "GetDomainSuggestions",
    "GetOperationDetail",
    "ListDomains",
    "ListOperations",
    "ListTagsForDomain",
    "RegisterDomain",
    "RenewDomain",
    "ResendContactReachabilityEmail",
    "RetrieveDomainAuthCode",
    "TransferDomain",
    "UpdateDomainContact",
    "UpdateDomainContactPrivacy",
    "UpdateDomainNameservers",
    "UpdateTagsForDomain",
    "ViewBilling"
  ]
}
{
  "service": "storagegateway",
  "actions": [
    "ActivateGateway",
    "AddCache",
    "AddTagsToResource",
    "AddUploadBuffer",
    "AddWorkingStorage",
    "CancelArchival",
    "CancelRetrieval",
    "CreateCachediSCSIVolume",
    "CreateNFSFileShare",
    "CreateSnapshot",
    "CreateSnapshotFromVolumeRecoveryPoint",
    "CreateStorediSCSIVolume",
    "CreateTapes",
    "CreateTapeWithBarcode",
    "DeleteBandwidthRateLimit",
    "DeleteChapCredentials",
    "DeleteFileShare",
    "DeleteGateway",
    "DeleteSnapshotSchedule",
    "DeleteTape",
    "DeleteTapeArchive",
    "DeleteVolume",
    "DescribeBandwidthRateLimit",
    "DescribeCache",
    "DescribeCachediSCSIVolumes",
    "DescribeChapCredentials",
    "DescribeGatewayInformation",
    "DescribeMaintenanceStartTime",
    "DescribeNFSFileShares",
    "DescribeSnapshotSchedule",
    "DescribeStorediSCSIVolumes",
    "DescribeTapeArchives",
    "DescribeTapeRecoveryPoints",
    "DescribeTapes",
    "DescribeUploadBuffer",
    "DescribeVTLDevices",
    "DescribeWorkingStorage",
    "DisableGateway",
    "ListFileShares",
    "ListGateways",
    "ListLocalDisks",
    "ListTagsForResource",
    "ListTapes",
    "ListVolumeInitiators",
    "ListVolumeRecoveryPoints",
    "ListVolumes",
    "RefreshCache",
    "RemoveTagsFromResource",
    "ResetCache",
    "RetrieveTapeArchive",
    "RetrieveTapeRecoveryPoint",
    "SetLocalConsolePassword",
    "ShutdownGateway",
    "StartGateway",
    "UpdateBandwidthRateLimit",
    "UpdateChapCredentials",
    "UpdateGatewayInformation",
    "UpdateGatewaySoftwareNow",
    "UpdateMaintenanceStartTime",
    "UpdateNFSFileShare",
    "UpdateSnapshotSchedule",
    "UpdateVTLDeviceType"
  ]
}
{
  "service": "awssupport",
  "actions": [
    "AddAttachmentsToSet",
    "AddCommunicationToCase",
    "CreateCase",
    "DescribeAttachment",
    "DescribeCases",
    "DescribeCommunications",
    "DescribeServices",
    "DescribeSeverityLevels",
    "DescribeTrustedAdvisorCheckRefreshStatuses",
    "DescribeTrustedAdvisorCheckResult",
    "DescribeTrustedAdvisorChecks",
    "DescribeTrustedAdvisorCheckSummaries",
    "RefreshTrustedAdvisorCheck",
    "ResolveCase"
  ]
}
{
  "service": "AWSEC2",
  "actions": [
    "AcceptReservedInstancesExchangeQuote",
    "AcceptVpcPeeringConnection",
    "AllocateAddress",
    "AllocateHosts",
    "AssignIpv6Addresses",
    "AssignPrivateIpAddresses",
    "AssociateAddress",
    "AssociateDhcpOptions",
    "AssociateIamInstanceProfile",
    "AssociateRouteTable",
    "AssociateSubnetCidrBlock",
    "AssociateVpcCidrBlock",
    "AttachClassicLinkVpc",
    "AttachInternetGateway",
    "AttachNetworkInterface",
    "AttachVolume",
    "AttachVpnGateway",
    "AuthorizeSecurityGroupEgress",
    "AuthorizeSecurityGroupIngress",
    "BundleInstance",
    "CancelBundleTask",
    "CancelConversionTask",
    "CancelExportTask",
    "CancelImportTask",
    "CancelReservedInstancesListing",
    "CancelSpotFleetRequests",
    "CancelSpotInstanceRequests",
    "ConfirmProductInstance",
    "CopyImage",
    "CopySnapshot",
    "CreateCustomerGateway",
    "CreateDhcpOptions",
    "CreateEgressOnlyInternetGateway",
    "CreateFlowLogs",
    "CreateImage",
    "CreateInstanceExportTask",
    "CreateInternetGateway",
    "CreateKeyPair",
    "CreateNatGateway",
    "CreateNetworkAcl",
    "CreateNetworkAclEntry",
    "CreateNetworkInterface",
    "CreatePlacementGroup",
    "CreateReservedInstancesListing",
    "CreateRoute",
    "CreateRouteTable",
    "CreateSecurityGroup",
    "CreateSnapshot",
    "CreateSpotDatafeedSubscription",
    "CreateSubnet",
    "CreateTags",
    "CreateVolume",
    "CreateVpc",
    "CreateVpcEndpoint",
    "CreateVpcPeeringConnection",
    "CreateVpnConnection",
    "CreateVpnConnectionRoute",
    "CreateVpnGateway",
    "DeleteCustomerGateway",
    "DeleteDhcpOptions",
    "DeleteEgressOnlyInternetGateway",
    "DeleteFlowLogs",
    "DeleteInternetGateway",
    "DeleteKeyPair",
    "DeleteNatGateway",
    "DeleteNetworkAcl",
    "DeleteNetworkAclEntry",
    "DeleteNetworkInterface",
    "DeletePlacementGroup",
    "DeleteRoute",
    "DeleteRouteTable",
    "DeleteSecurityGroup",
    "DeleteSnapshot",
    "DeleteSpotDatafeedSubscription",
    "DeleteSubnet",
    "DeleteTags",
    "DeleteVolume",
    "DeleteVpc",
    "DeleteVpcEndpoints",
    "DeleteVpcPeeringConnection",
    "DeleteVpnConnection",
    "DeleteVpnConnectionRoute",
    "DeleteVpnGateway",
    "DeregisterImage",
    "DescribeAccountAttributes",
    "DescribeAddresses",
    "DescribeAvailabilityZones",
    "DescribeBundleTasks",
    "DescribeClassicLinkInstances",
    "DescribeConversionTasks",
    "DescribeCustomerGateways",
    "DescribeDhcpOptions",
    "DescribeEgressOnlyInternetGateways",
    "DescribeExportTasks",
    "DescribeFlowLogs",
    "DescribeHostReservationOfferings",
    "DescribeHostReservations",
    "DescribeHosts",
    "DescribeIamInstanceProfileAssociations",
    "DescribeIdentityIdFormat",
    "DescribeIdFormat",
    "DescribeImageAttribute",
    "DescribeImages",
    "DescribeImportImageTasks",
    "DescribeImportSnapshotTasks",
    "DescribeInstanceAttribute",
    "DescribeInstances",
    "DescribeInstanceStatus",
    "DescribeInternetGateways",
    "DescribeKeyPairs",
    "DescribeMovingAddresses",
    "DescribeNatGateways",
    "DescribeNetworkAcls",
    "DescribeNetworkInterfaceAttribute",
    "DescribeNetworkInterfaces",
    "DescribePlacementGroups",
    "DescribePrefixLists",
    "DescribeRegions",
    "DescribeReservedInstances",
    "DescribeReservedInstancesListings",
    "DescribeReservedInstancesModifications",
    "DescribeReservedInstancesOfferings",
    "DescribeRouteTables",
    "DescribeScheduledInstanceAvailability",
    "DescribeScheduledInstances",
    "DescribeSecurityGroupReferences",
    "DescribeSecurityGroups",
    "DescribeSnapshotAttribute",
    "DescribeSnapshots",
    "DescribeSpotDatafeedSubscription",
    "DescribeSpotFleetInstances",
    "DescribeSpotFleetRequestHistory",
    "DescribeSpotFleetRequests",
    "DescribeSpotInstanceRequests",
    "DescribeSpotPriceHistory",
    "DescribeStaleSecurityGroups",
    "DescribeSubnets",
    "DescribeTags",
    "DescribeVolumeAttribute",
    "DescribeVolumes",
    "DescribeVolumesModifications",
    "DescribeVolumeStatus",
    "DescribeVpcAttribute",
    "DescribeVpcClassicLink",
    "DescribeVpcClassicLinkDnsSupport",
    "DescribeVpcEndpoints",
    "DescribeVpcEndpointServices",
    "DescribeVpcPeeringConnections",
    "DescribeVpcs",
    "DescribeVpnConnections",
    "DescribeVpnGateways",
    "DetachClassicLinkVpc",
    "DetachInternetGateway",
    "DetachNetworkInterface",
    "DetachVolume",
    "DetachVpnGateway",
    "DisableVgwRoutePropagation",
    "DisableVpcClassicLink",
    "DisableVpcClassicLinkDnsSupport",
    "DisassociateAddress",
    "DisassociateIamInstanceProfile",
    "DisassociateRouteTable",
    "DisassociateSubnetCidrBlock",
    "DisassociateVpcCidrBlock",
    "EnableVgwRoutePropagation",
    "EnableVolumeIO",
    "EnableVpcClassicLink",
    "EnableVpcClassicLinkDnsSupport",
    "GetConsoleOutput",
    "GetConsoleScreenshot",
    "GetHostReservationPurchasePreview",
    "GetPasswordData",
    "GetReservedInstancesExchangeQuote",
    "ImportImage",
    "ImportInstance",
    "ImportKeyPair",
    "ImportSnapshot",
    "ImportVolume",
    "ModifyHosts",
    "ModifyIdentityIdFormat",
    "ModifyIdFormat",
    "ModifyImageAttribute",
    "ModifyInstanceAttribute",
    "ModifyInstancePlacement",
    "ModifyNetworkInterfaceAttribute",
    "ModifyReservedInstances",
    "ModifySnapshotAttribute",
    "ModifySpotFleetRequest",
    "ModifySubnetAttribute",
    "ModifyVolume",
    "ModifyVolumeAttribute",
    "ModifyVpcAttribute",
    "ModifyVpcEndpoint",
    "ModifyVpcPeeringConnectionOptions",
    "MonitorInstances",
    "MoveAddressToVpc",
    "PurchaseHostReservation",
    "PurchaseReservedInstancesOffering",
    "PurchaseScheduledInstances",
    "RebootInstances",
    "RegisterImage",
    "RejectVpcPeeringConnection",
    "ReleaseAddress",
    "ReleaseHosts",
    "ReplaceIamInstanceProfileAssociation",
    "ReplaceNetworkAclAssociation",
    "ReplaceNetworkAclEntry",
    "ReplaceRoute",
    "ReplaceRouteTableAssociation",
    "ReportInstanceStatus",
    "RequestSpotFleet",
    "RequestSpotInstances",
    "ResetImageAttribute",
    "ResetInstanceAttribute",
    "ResetNetworkInterfaceAttribute",
    "ResetSnapshotAttribute",
    "RestoreAddressToClassic",
    "RevokeSecurityGroupEgress",
    "RevokeSecurityGroupIngress",
    "RunInstances",
    "RunScheduledInstances",
    "StartInstances",
    "StopInstances",
    "TerminateInstances",
    "UnassignIpv6Addresses",
    "UnassignPrivateIpAddresses",
    "UnmonitorInstances"
  ]
}
{
  "service": "dynamodbstreams",
  "actions": []
}
{
  "service": "systems-manager",
  "actions": [
    "AddTagsToResource",
    "CancelCommand",
    "CreateActivation",
    "CreateAssociation",
    "CreateAssociationBatch",
    "CreateDocument",
    "CreateMaintenanceWindow",
    "CreatePatchBaseline",
    "DeleteActivation",
    "DeleteAssociation",
    "DeleteDocument",
    "DeleteMaintenanceWindow",
    "DeleteParameter",
    "DeletePatchBaseline",
    "DeregisterManagedInstance",
    "DeregisterPatchBaselineForPatchGroup",
    "DeregisterTargetFromMaintenanceWindow",
    "DeregisterTaskFromMaintenanceWindow",
    "DescribeActivations",
    "DescribeAssociation",
    "DescribeAutomationExecutions",
    "DescribeAvailablePatches",
    "DescribeDocument",
    "DescribeDocumentPermission",
    "DescribeEffectiveInstanceAssociations",
    "DescribeEffectivePatchesForPatchBaseline",
    "DescribeInstanceAssociationsStatus",
    "DescribeInstanceInformation",
    "DescribeInstancePatches",
    "DescribeInstancePatchStates",
    "DescribeInstancePatchStatesForPatchGroup",
    "DescribeMaintenanceWindowExecutions",
    "DescribeMaintenanceWindowExecutionTaskInvocations",
    "DescribeMaintenanceWindowExecutionTasks",
    "DescribeMaintenanceWindows",
    "DescribeMaintenanceWindowTargets",
    "DescribeMaintenanceWindowTasks",
    "DescribeParameters",
    "DescribePatchBaselines",
    "DescribePatchGroups",
    "DescribePatchGroupState",
    "GetAutomationExecution",
    "GetCommandInvocation",
    "GetDefaultPatchBaseline",
    "GetDeployablePatchSnapshotForInstance",
    "GetDocument",
    "GetInventory",
    "GetInventorySchema",
    "GetMaintenanceWindow",
    "GetMaintenanceWindowExecution",
    "GetMaintenanceWindowExecutionTask",
    "GetParameterHistory",
    "GetParameters",
    "GetPatchBaseline",
    "GetPatchBaselineForPatchGroup",
    "ListAssociations",
    "ListCommandInvocations",
    "ListCommands",
    "ListDocuments",
    "ListDocumentVersions",
    "ListInventoryEntries",
    "ListTagsForResource",
    "ModifyDocumentPermission",
    "PutInventory",
    "PutParameter",
    "RegisterDefaultPatchBaseline",
    "RegisterPatchBaselineForPatchGroup",
    "RegisterTargetWithMaintenanceWindow",
    "RegisterTaskWithMaintenanceWindow",
    "RemoveTagsFromResource",
    "SendCommand",
    "StartAutomationExecution",
    "StopAutomationExecution",
    "UpdateAssociation",
    "UpdateAssociationStatus",
    "UpdateDocument",
    "UpdateDocumentDefaultVersion",
    "UpdateMaintenanceWindow",
    "UpdateManagedInstanceRole",
    "UpdatePatchBaseline"
  ]
}
